<script type="module">// ------------------------------------------------
    // BASIC SETUP
    // ------------------------------------------------

    import * as THREE from 'https://cdn.skypack.dev/three@0.129.0/build/three.module.js';
    import { OrbitControls } from 'https://cdn.skypack.dev/three@0.129.0/examples/jsm/controls/OrbitControls.js';
    import { GLTFLoader } from 'https://cdn.skypack.dev/three@0.129.0/examples/jsm/loaders/GLTFLoader.js';


    THREE.Cache.enabled = true;
    var scene = new THREE.Scene();

    scene.background = new THREE.Color(0xa0a0a0);
    scene.fog = new THREE.Fog(0xa0a0a0, 200, 1000);

    const hemiLight = new THREE.HemisphereLight(0xffffff, 0x444444);
    hemiLight.position.set(0, 10, 0);
    scene.add(hemiLight);

    const light = new THREE.PointLight(0xffffff, 1, 100);
    light.position.set(0, 10, 0);
    scene.add(light);

    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
    camera.position.z = 0;
    camera.position.x = 10;
    var renderer = new THREE.WebGLRenderer({antialias: true});
    renderer.setClearColor("#000000");
    renderer.setSize(window.innerWidth/2, window.innerHeight/2);
    document.getElementById("3dView").appendChild(renderer.domElement);

    // ------------------------------------------------
    // FUN STARTS HERE
    // ------------------------------------------------

    // Add cube to Scene
    var loader = new GLTFLoader();
    loader.load( '/media-file/' + '<%- mediaID %>', function ( gltf )
    {
        const model = gltf.scene;  // sword 3D object is loaded
        model.scale.set(1, 1, 1);
        model.position.y = 0;
        scene.add(model);
    } );

    let controls = new OrbitControls(camera, renderer.domElement);
    controls.target.set(0, 1, 0);
    controls.enablePan = false
    controls.enableZoom = true;
    controls.update();


    // Render Loop
    var render = function () {
        requestAnimationFrame(render);

        /*cube.rotation.x += 0.01;
        cube.rotation.y += 0.01;*/

        // Render the scene
        renderer.render(scene, camera);
    };

    render();
</script>
